from math import *
def factors(n):
  s=[]
  for i in range(1,int(sqrt(n))+1):
    if(n%i==0):s.append(i)
    if(n%i==0 and n//i!=i):s.append(n//i)
  s.sort()
  return len(s)

import math
def primeFactors(n):
  a=[]
  while n % 2 == 0:
    a.append(2);n/=2
  for i in range(3,int(math.sqrt(n))+1,2):
    while n % i== 0:
      a.append(i);n/=i
  if n>2:a.append(n)
  return a

from math import *
def tub(n):
        if(n<2):return False
        if((n%2==0 and n!=2) or 
            (n%3==0 and n!=3) or 
            (n%5==0 and n!=5) or
            (n%7==0 and n!=7)):return False
        for i in range(11,int(sqrt(n))+1,2):
            if n%i==0:return False
        return True

def gcd(a,b):
  while(b!=0):
    t=a%b
    a=b;b=t
  return a

def lcm(a,b):
  return a*b//gcd(a,b)

from math import *
def is_prime(n):
    if n <= 1:
        return False
    elif n <= 3:
        return True
    elif n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

import random

def is_prime(n, k=5):
    if n < 2:
        return False
    for p in [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]:
        if n % p == 0:
            return n == p
    r, d = 0, n - 1
    while d % 2 == 0:
        r, d = r + 1, d // 2
    for _ in range(k):
        a = random.randint(2, n - 1)
        x = pow(a, d, n)
        if x == 1 or x == n - 1:
            continue
        for _ in range(r - 1):
            x = pow(x, 2, n)
            if x == n - 1:
                break
        else:
            return False
    return True
